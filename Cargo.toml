[package]
name = "ghx_constrained_delaunay"
version = "0.1.0"
edition = "2021"
description = "2d constrained Delaunay triangulation"
repository = "https://github.com/Henauxg/ghx_constrained_delaunay"
documentation = "https://docs.rs/ghx_constrained_delaunay"
license = "MIT OR Apache-2.0"
keywords = ["gamedev", "triangulation", "delaunay", "2d"]
categories = ["algorithms", "game-development"]
readme = "README.md"
exclude = ["assets/"]

[dependencies]
glam = { version = ">=0.21, <=0.27" }
hashbrown = "0.14.5"
tracing = "0.1.40"

rayon = { version = "1.10.0", optional = true }

[features]
default = []

# Only useful for DT not CDT.
# Allows filtering the triangles in parallel during the final step of the algorithm. Threshold can be tweaked in the algorithm input configuration.
# Only useful for sizeable datasets.
parallel_filtering = ["dep:rayon"]

# Uses f64 for the triangulation.
# Can be better for input data that require more precision.
# (disabled by default for more performances)
f64 = []
# Uses u64 indexes for the triangles and the vertices.
# Allows for a larger count of vertices to triangulate.
# (disabled by default for more performances)
u64_indexes = []

# Register debug data (triangle) in buffers during the execution of the triangulation
debug_context = []
# Add logs during the triangulation process to indicate the current progress
progress_log = ["debug_context"]
# Adds profile spans to use with the Tracy profiler
profile_traces = []

[workspace]
members = ["benchmarks", "examples", "profiling"]
